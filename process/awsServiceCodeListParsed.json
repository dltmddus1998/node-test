[
  {
    "serviceCode": "access-analyzer",
    "subServiceCodes": ["accessanalyzer-analyzer"]
  },
  {
    "serviceCode": "apigateway",
    "subServiceCodes": [
      "apigateway-restapi",
      "apigateway-stage",
      "apigatewayv2-api",
      "apigatewayv2-stage"
    ]
  },
  { "serviceCode": "appflow", "subServiceCodes": ["appflow-flow"] },
  {
    "serviceCode": "athena",
    "subServiceCodes": ["athena-datacatalog", "athena-workgroup"]
  },
  { "serviceCode": "braket", "subServiceCodes": [] },
  { "serviceCode": "chime", "subServiceCodes": [] },
  {
    "serviceCode": "cloudfront",
    "subServiceCodes": [
      "cloudfront-distribution",
      "cloudfront-streamingdistribution"
    ]
  },
  {
    "serviceCode": "monitoring",
    "subServiceCodes": ["cloudwatch-alarm", "cloudwatch-metricstream"]
  },
  { "serviceCode": "comprehend", "subServiceCodes": [] },
  { "serviceCode": "comprehendmedical", "subServiceCodes": [] },
  { "serviceCode": "connect", "subServiceCodes": ["connect-phonenumber"] },
  { "serviceCode": "dlm", "subServiceCodes": [] },
  { "serviceCode": "docdb", "subServiceCodes": [] },
  { "serviceCode": "dynamodb", "subServiceCodes": ["dynamodb-table"] },
  { "serviceCode": "dax", "subServiceCodes": [] },
  { "serviceCode": "ebs", "subServiceCodes": [] },
  {
    "serviceCode": "ec2",
    "subServiceCodes": [
      "ec2-customergateway",
      "ec2-dhcpoptions",
      "ec2-ec2fleet",
      "ec2-eip",
      "ec2-egressonlyinternetgateway",
      "ec2-flowlog",
      "ec2-host",
      "ec2-ipam",
      "ec2-instance",
      "ec2-internetgateway",
      "ec2-launchtemplate",
      "ec2-natgateway",
      "ec2-networkacl",
      "ec2-networkinsightsaccessscopeanalysis",
      "ec2-networkinterface",
      "ec2-prefixlist",
      "ec2-registeredhainstance",
      "ec2-routetable",
      "ec2-securitygroup",
      "ec2-spotfleet",
      "ec2-subnet",
      "ec2-subnetroutetableassociation",
      "ec2-trafficmirrorfilter",
      "ec2-trafficmirrorsession",
      "ec2-trafficmirrortarget",
      "ec2-transitgateway",
      "ec2-transitgatewayattachment",
      "ec2-transitgatewayroutetable",
      "ec2-vpc",
      "ec2-vpcendpoint",
      "ec2-vpcendpointservice",
      "ec2-vpcpeeringconnection",
      "ec2-vpnconnection",
      "ec2-vpngateway",
      "ec2-volume"
    ]
  },
  {
    "serviceCode": "autoscaling",
    "subServiceCodes": [
      "autoscaling-autoscalinggroup",
      "autoscaling-launchconfiguration",
      "autoscaling-scalingpolicy",
      "autoscaling-scheduledaction",
      "autoscaling-warmpool"
    ]
  },
  {
    "serviceCode": "imagebuilder",
    "subServiceCodes": [
      "imagebuilder-containerrecipe",
      "imagebuilder-distributionconfiguration",
      "imagebuilder-imagepipeline",
      "imagebuilder-infrastructureconfiguration"
    ]
  },
  {
    "serviceCode": "ecr",
    "subServiceCodes": [
      "ecr-publicrepository",
      "ecr-pullthroughcacherule",
      "ecr-registrypolicy",
      "ecr-repository"
    ]
  },
  {
    "serviceCode": "ecs",
    "subServiceCodes": [
      "ecs-cluster",
      "ecs-service",
      "ecs-taskdefinition",
      "ecs-taskset"
    ]
  },
  {
    "serviceCode": "elasticfilesystem",
    "subServiceCodes": ["efs-accesspoint", "efs-filesystem"]
  },
  {
    "serviceCode": "eks",
    "subServiceCodes": [
      "eks-addon",
      "eks-cluster",
      "eks-fargateprofile",
      "eks-identityproviderconfig"
    ]
  },
  { "serviceCode": "elastic-inference", "subServiceCodes": [] },
  { "serviceCode": "elastictranscoder", "subServiceCodes": [] },
  { "serviceCode": "elasticache", "subServiceCodes": [] },
  {
    "serviceCode": "elasticmapreduce",
    "subServiceCodes": ["emr-securityconfiguration"]
  },
  {
    "serviceCode": "events",
    "subServiceCodes": [
      "events-apidestination",
      "events-archive",
      "events-connection",
      "events-endpoint",
      "events-eventbus",
      "events-rule"
    ]
  },
  { "serviceCode": "finspace", "subServiceCodes": [] },
  { "serviceCode": "forecast", "subServiceCodes": [] },
  {
    "serviceCode": "frauddetector",
    "subServiceCodes": [
      "frauddetector-entitytype",
      "frauddetector-label",
      "frauddetector-outcome",
      "frauddetector-variable"
    ]
  },
  { "serviceCode": "fsx", "subServiceCodes": [] },
  { "serviceCode": "gamelift", "subServiceCodes": [] },
  { "serviceCode": "gamesparks", "subServiceCodes": [] },
  {
    "serviceCode": "guardduty",
    "subServiceCodes": ["guardduty-detector", "guardduty-filter"]
  },
  { "serviceCode": "inspector2", "subServiceCodes": [] },
  {
    "serviceCode": "ivs",
    "subServiceCodes": [
      "ivs-channel",
      "ivs-playbackkeypair",
      "ivs-recordingconfiguration"
    ]
  },
  { "serviceCode": "kendra", "subServiceCodes": [] },
  { "serviceCode": "cassandra", "subServiceCodes": ["cassandra-keyspace"] },
  {
    "serviceCode": "kinesis",
    "subServiceCodes": ["kinesis-stream", "kinesis-streamconsumer"]
  },
  { "serviceCode": "lex", "subServiceCodes": ["lex-bot", "lex-botalias"] },
  {
    "serviceCode": "lightsail",
    "subServiceCodes": [
      "lightsail-bucket",
      "lightsail-certificate",
      "lightsail-disk",
      "lightsail-staticip"
    ]
  },
  { "serviceCode": "geo", "subServiceCodes": [] },
  { "serviceCode": "lookoutequipment", "subServiceCodes": [] },
  { "serviceCode": "lookoutmetrics", "subServiceCodes": [] },
  {
    "serviceCode": "lookoutvision",
    "subServiceCodes": ["lookoutvision-project"]
  },
  { "serviceCode": "machinelearning", "subServiceCodes": [] },
  { "serviceCode": "macie2", "subServiceCodes": [] },
  { "serviceCode": "managedblockchain", "subServiceCodes": [] },
  { "serviceCode": "grafana", "subServiceCodes": [] },
  { "serviceCode": "monitron", "subServiceCodes": [] },
  { "serviceCode": "mq", "subServiceCodes": ["amazonmq-broker"] },
  { "serviceCode": "kafka", "subServiceCodes": ["msk-cluster"] },
  { "serviceCode": "airflow", "subServiceCodes": [] },
  { "serviceCode": "neptune", "subServiceCodes": [] },
  { "serviceCode": "nimble", "subServiceCodes": [] },
  {
    "serviceCode": "es",
    "subServiceCodes": ["elasticsearch-domain", "opensearch-domain"]
  },
  { "serviceCode": "personalize", "subServiceCodes": [] },
  {
    "serviceCode": "pinpoint",
    "subServiceCodes": [
      "pinpoint-app",
      "pinpoint-applicationsettings",
      "pinpoint-campaign",
      "pinpoint-inapptemplate",
      "pinpoint-segment"
    ]
  },
  { "serviceCode": "polly", "subServiceCodes": [] },
  { "serviceCode": "qldb", "subServiceCodes": ["qldb-ledger"] },
  { "serviceCode": "quicksight", "subServiceCodes": [] },
  {
    "serviceCode": "rds",
    "subServiceCodes": [
      "rds-dbcluster",
      "rds-dbclustersnapshot",
      "rds-dbinstance",
      "rds-dbsecuritygroup",
      "rds-dbsnapshot",
      "rds-dbsubnetgroup",
      "rds-eventsubscription",
      "rds-globalcluster"
    ]
  },
  {
    "serviceCode": "redshift",
    "subServiceCodes": [
      "redshift-cluster",
      "redshift-clusterparametergroup",
      "redshift-clustersecuritygroup",
      "redshift-clustersnapshot",
      "redshift-clustersubnetgroup",
      "redshift-eventsubscription",
      "redshift-scheduledaction"
    ]
  },
  { "serviceCode": "rekognition", "subServiceCodes": [] },
  {
    "serviceCode": "route53",
    "subServiceCodes": [
      "route53-healthcheck",
      "route53-hostedzone",
      "route53recoverycontrol-cluster",
      "route53recoverycontrol-controlpanel",
      "route53recoverycontrol-routingcontrol",
      "route53recoverycontrol-safetyrule",
      "route53recoveryreadiness-cell",
      "route53recoveryreadiness-readinesscheck",
      "route53recoveryreadiness-recoverygroup",
      "route53recoveryreadiness-resourceset",
      "route53resolver-firewalldomainlist",
      "route53resolver-firewallrulegroupassociation",
      "route53resolver-resolverrule",
      "route53resolver-resolverruleassociation"
    ]
  },
  {
    "serviceCode": "s3",
    "subServiceCodes": [
      "s3-accountpublicaccessblock",
      "s3-bucket",
      "s3-multiregionaccesspoint",
      "s3-storagelens"
    ]
  },
  { "serviceCode": "glacier", "subServiceCodes": [] },
  {
    "serviceCode": "sagemaker",
    "subServiceCodes": [
      "sagemaker-appimageconfig",
      "sagemaker-coderepository",
      "sagemaker-domain",
      "sagemaker-endpointconfig",
      "sagemaker-image",
      "sagemaker-model",
      "sagemaker-notebookinstance",
      "sagemaker-notebookinstancelifecycleconfig",
      "sagemaker-workteam"
    ]
  },
  {
    "serviceCode": "ses",
    "subServiceCodes": [
      "ses-configurationset",
      "ses-contactlist",
      "ses-receiptfilter",
      "ses-receiptruleset",
      "ses-template"
    ]
  },
  { "serviceCode": "sns", "subServiceCodes": ["sns-topic"] },
  { "serviceCode": "sqs", "subServiceCodes": ["sqs-queue"] },
  { "serviceCode": "swf", "subServiceCodes": [] },
  { "serviceCode": "textract", "subServiceCodes": [] },
  { "serviceCode": "timestream", "subServiceCodes": [] },
  { "serviceCode": "transcribe", "subServiceCodes": [] },
  { "serviceCode": "translate", "subServiceCodes": [] },
  { "serviceCode": "verifiedpermissions", "subServiceCodes": [] },
  { "serviceCode": "vpc", "subServiceCodes": [] },
  { "serviceCode": "vpc-lattice", "subServiceCodes": [] },
  { "serviceCode": "wam", "subServiceCodes": [] },
  {
    "serviceCode": "workspaces",
    "subServiceCodes": ["workspaces-connectionalias", "workspaces-workspace"]
  },
  { "serviceCode": "workspaces-web", "subServiceCodes": [] },
  { "serviceCode": "application-autoscaling", "subServiceCodes": [] },
  {
    "serviceCode": "appstream2",
    "subServiceCodes": ["appstream-application", "appstream-directoryconfig"]
  },
  { "serviceCode": "account", "subServiceCodes": [] },
  { "serviceCode": "amplify", "subServiceCodes": ["amplify-app"] },
  {
    "serviceCode": "appmesh",
    "subServiceCodes": ["appmesh-virtualnode", "appmesh-virtualservice"]
  },
  { "serviceCode": "apprunner", "subServiceCodes": ["apprunner-vpcconnector"] },
  {
    "serviceCode": "appconfig",
    "subServiceCodes": [
      "appconfig-application",
      "appconfig-configurationprofile",
      "appconfig-deploymentstrategy",
      "appconfig-environment"
    ]
  },
  { "serviceCode": "appfabric", "subServiceCodes": [] },
  { "serviceCode": "application-cost-profiler", "subServiceCodes": [] },
  {
    "serviceCode": "discovery",
    "subServiceCodes": [
      "servicediscovery-httpnamespace",
      "servicediscovery-publicdnsnamespace",
      "servicediscovery-service"
    ]
  },
  { "serviceCode": "appsync", "subServiceCodes": ["appsync-graphqlapi"] },
  {
    "serviceCode": "auditmanager",
    "subServiceCodes": ["auditmanager-assessment"]
  },
  { "serviceCode": "autoscaling-plans", "subServiceCodes": [] },
  {
    "serviceCode": "backup",
    "subServiceCodes": [
      "backup-backupplan",
      "backup-backupselection",
      "backup-backupvault",
      "backup-recoverypoint",
      "backup-reportplan"
    ]
  },
  {
    "serviceCode": "batch",
    "subServiceCodes": ["batch-computeenvironment", "batch-jobqueue"]
  },
  { "serviceCode": "acm", "subServiceCodes": ["acm-certificate"] },
  { "serviceCode": "chatbot", "subServiceCodes": [] },
  { "serviceCode": "cleanrooms", "subServiceCodes": [] },
  { "serviceCode": "AWSCloudMap", "subServiceCodes": [] },
  { "serviceCode": "cloud9", "subServiceCodes": ["cloud9-environmentec2"] },
  {
    "serviceCode": "cloudformation",
    "subServiceCodes": ["cloudformation-stack"]
  },
  { "serviceCode": "cloudhsm", "subServiceCodes": [] },
  { "serviceCode": "cloudshell", "subServiceCodes": [] },
  { "serviceCode": "cloudtrail", "subServiceCodes": ["cloudtrail-trail"] },
  {
    "serviceCode": "codeartifact",
    "subServiceCodes": ["codeartifact-repository"]
  },
  { "serviceCode": "codebuild", "subServiceCodes": ["codebuild-project"] },
  { "serviceCode": "codecommit", "subServiceCodes": [] },
  {
    "serviceCode": "codedeploy",
    "subServiceCodes": [
      "codedeploy-application",
      "codedeploy-deploymentconfig",
      "codedeploy-deploymentgroup"
    ]
  },
  {
    "serviceCode": "codepipeline",
    "subServiceCodes": ["codepipeline-pipeline"]
  },
  { "serviceCode": "compute-optimizer", "subServiceCodes": [] },
  {
    "serviceCode": "config",
    "subServiceCodes": [
      "config-configurationrecorder",
      "config-conformancepackcompliance",
      "config-resourcecompliance"
    ]
  },
  { "serviceCode": "dataexchange", "subServiceCodes": [] },
  { "serviceCode": "datapipeline", "subServiceCodes": [] },
  {
    "serviceCode": "dms",
    "subServiceCodes": [
      "dms-certificate",
      "dms-eventsubscription",
      "dms-replicationinstance",
      "dms-replicationsubnetgroup",
      "dms-replicationtask"
    ]
  },
  {
    "serviceCode": "datasync",
    "subServiceCodes": [
      "datasync-locationefs",
      "datasync-locationfsxlustre",
      "datasync-locationfsxwindows",
      "datasync-locationhdfs",
      "datasync-locationnfs",
      "datasync-locationobjectstorage",
      "datasync-locations3",
      "datasync-locationsmb",
      "datasync-task"
    ]
  },
  { "serviceCode": "deeplens", "subServiceCodes": [] },
  { "serviceCode": "deepracer", "subServiceCodes": [] },
  { "serviceCode": "directconnect", "subServiceCodes": [] },
  { "serviceCode": "ds", "subServiceCodes": [] },
  {
    "serviceCode": "elasticbeanstalk",
    "subServiceCodes": [
      "elasticbeanstalk-application",
      "elasticbeanstalk-applicationversion",
      "elasticbeanstalk-environment"
    ]
  },
  { "serviceCode": "drs", "subServiceCodes": [] },
  { "serviceCode": "mediaconnect", "subServiceCodes": [] },
  { "serviceCode": "mediaconvert", "subServiceCodes": [] },
  { "serviceCode": "medialive", "subServiceCodes": [] },
  {
    "serviceCode": "mediapackage",
    "subServiceCodes": ["mediapackage-packaginggroup"]
  },
  { "serviceCode": "mediastore", "subServiceCodes": [] },
  { "serviceCode": "mediatailor", "subServiceCodes": [] },
  { "serviceCode": "entityresolution", "subServiceCodes": [] },
  { "serviceCode": "fargate", "subServiceCodes": [] },
  { "serviceCode": "fis", "subServiceCodes": [] },
  { "serviceCode": "fms", "subServiceCodes": [] },
  {
    "serviceCode": "globalaccelerator",
    "subServiceCodes": [
      "globalaccelerator-accelerator",
      "globalaccelerator-endpointgroup",
      "globalaccelerator-listener"
    ]
  },
  {
    "serviceCode": "glue",
    "subServiceCodes": ["glue-classifier", "glue-job", "glue-mltransform"]
  },
  {
    "serviceCode": "groundstation",
    "subServiceCodes": ["groundstation-config"]
  },
  { "serviceCode": "medical-imaging", "subServiceCodes": [] },
  { "serviceCode": "healthlake", "subServiceCodes": [] },
  { "serviceCode": "omics", "subServiceCodes": [] },
  { "serviceCode": "sso", "subServiceCodes": [] },
  {
    "serviceCode": "iam",
    "subServiceCodes": [
      "iam-group",
      "iam-policy",
      "iam-role",
      "iam-samlprovider",
      "iam-servercertificate",
      "iam-user"
    ]
  },
  {
    "serviceCode": "iot1click",
    "subServiceCodes": [
      "iot-accountauditconfiguration",
      "iot-authorizer",
      "iot-custommetric",
      "iot-dimension",
      "iot-mitigationaction",
      "iot-policy",
      "iot-rolealias",
      "iot-scheduledaudit",
      "iot-securityprofile"
    ]
  },
  {
    "serviceCode": "iotanalytics",
    "subServiceCodes": [
      "iotanalytics-channel",
      "iotanalytics-dataset",
      "iotanalytics-datastore",
      "iotanalytics-pipeline"
    ]
  },
  { "serviceCode": "iotcore", "subServiceCodes": [] },
  {
    "serviceCode": "iotevents",
    "subServiceCodes": [
      "iotevents-alarmmodel",
      "iotevents-detectormodel",
      "iotevents-input"
    ]
  },
  { "serviceCode": "iotfleetwise", "subServiceCodes": [] },
  { "serviceCode": "greengrass", "subServiceCodes": [] },
  { "serviceCode": "iotroborunner", "subServiceCodes": [] },
  {
    "serviceCode": "iotsitewise",
    "subServiceCodes": [
      "iotsitewise-assetmodel",
      "iotsitewise-dashboard",
      "iotsitewise-portal",
      "iotsitewise-project"
    ]
  },
  {
    "serviceCode": "iottwinmaker",
    "subServiceCodes": [
      "iottwinmaker-entity",
      "iottwinmaker-scene",
      "iottwinmaker-workspace"
    ]
  },
  { "serviceCode": "kms", "subServiceCodes": ["kms-alias", "kms-key"] },
  { "serviceCode": "lakeformation", "subServiceCodes": [] },
  {
    "serviceCode": "lambda",
    "subServiceCodes": ["lambda-alias", "lambda-function"]
  },
  { "serviceCode": "launchwizard", "subServiceCodes": [] },
  { "serviceCode": "license-manager", "subServiceCodes": [] },
  { "serviceCode": "m2", "subServiceCodes": [] },
  {
    "serviceCode": "network-firewall",
    "subServiceCodes": [
      "networkfirewall-firewall",
      "networkfirewall-firewallpolicy",
      "networkfirewall-rulegroup",
      "networkfirewall-tlsinspectionconfiguration"
    ]
  },
  { "serviceCode": "organizations", "subServiceCodes": [] },
  { "serviceCode": "outposts", "subServiceCodes": [] },
  { "serviceCode": "panorama", "subServiceCodes": ["panorama-packageversion"] },
  { "serviceCode": "payment-cryptography", "subServiceCodes": [] },
  { "serviceCode": "private-networks", "subServiceCodes": [] },
  { "serviceCode": "acm-pca", "subServiceCodes": [] },
  { "serviceCode": "proton", "subServiceCodes": [] },
  {
    "serviceCode": "resiliencehub",
    "subServiceCodes": ["resiliencehub-resiliencypolicy"]
  },
  { "serviceCode": "ram", "subServiceCodes": [] },
  { "serviceCode": "resource-explorer-2", "subServiceCodes": [] },
  { "serviceCode": "resource-groups", "subServiceCodes": [] },
  {
    "serviceCode": "robomaker",
    "subServiceCodes": [
      "robomaker-robotapplication",
      "robomaker-robotapplicationversion",
      "robomaker-simulationapplication"
    ]
  },
  {
    "serviceCode": "secretsmanager",
    "subServiceCodes": ["secretsmanager-secret"]
  },
  { "serviceCode": "securityhub", "subServiceCodes": [] },
  { "serviceCode": "serverlessrepo", "subServiceCodes": [] },
  {
    "serviceCode": "servicecatalog",
    "subServiceCodes": [
      "servicecatalog-cloudformationproduct",
      "servicecatalog-cloudformationprovisionedproduct",
      "servicecatalog-portfolio"
    ]
  },
  {
    "serviceCode": "shield",
    "subServiceCodes": ["shield-protection", "shieldregional-protection"]
  },
  { "serviceCode": "signer", "subServiceCodes": ["signer-signingprofile"] },
  { "serviceCode": "simspaceweaver", "subServiceCodes": [] },
  { "serviceCode": "snowball", "subServiceCodes": [] },
  {
    "serviceCode": "states",
    "subServiceCodes": ["stepfunctions-activity", "stepfunctions-statemachine"]
  },
  { "serviceCode": "storagegateway", "subServiceCodes": [] },
  { "serviceCode": "scn", "subServiceCodes": [] },
  { "serviceCode": "support", "subServiceCodes": [] },
  {
    "serviceCode": "ssm",
    "subServiceCodes": [
      "ssm-associationcompliance",
      "ssm-filedata",
      "ssm-managedinstanceinventory",
      "ssm-patchcompliance"
    ]
  },
  { "serviceCode": "tnb", "subServiceCodes": [] },
  {
    "serviceCode": "transfer",
    "subServiceCodes": [
      "transfer-agreement",
      "transfer-connector",
      "transfer-workflow"
    ]
  },
  { "serviceCode": "notifications", "subServiceCodes": [] },
  {
    "serviceCode": "wafv2",
    "subServiceCodes": [
      "wafv2-ipset",
      "wafv2-managedruleset",
      "wafv2-regexpatternset",
      "wafv2-rulegroup",
      "wafv2-webacl"
    ]
  },
  {
    "serviceCode": "waf",
    "subServiceCodes": [
      "waf-ratebasedrule",
      "waf-rule",
      "waf-rulegroup",
      "waf-webacl"
    ]
  },
  {
    "serviceCode": "waf-regional",
    "subServiceCodes": [
      "wafregional-ratebasedrule",
      "wafregional-rule",
      "wafregional-rulegroup",
      "wafregional-webacl"
    ]
  },
  { "serviceCode": "wellarchitected", "subServiceCodes": [] },
  { "serviceCode": "xray", "subServiceCodes": ["xray-encryptionconfig"] },
  {
    "serviceCode": "elasticloadbalancing",
    "subServiceCodes": [
      "elasticloadbalancing-loadbalancer",
      "elasticloadbalancingv2-loadbalancer"
    ]
  },
  { "serviceCode": "servicequotas", "subServiceCodes": [] }
]
